@use './vars.scss';
@mixin pseudo($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}
@mixin responsive-ratio($x,$y, $pseudo: false) {
  $padding: unquote( ( calc($y / $x) ) * 100 + '%' );
  @if $pseudo {
      &:before {
          @include pseudo($pos: relative);
          width: 100%;
          padding-top: $padding;
      }
  } @else {
      padding-top: $padding;
  }
}
@mixin content-in-ratio {
  & > div, > svg, > iframe, > img {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
}
// A map of breakpoints.
$breakpoints: (
  xs: 408px,
  sm: 600px,
  md: 840px,
  lg: 960px,
  xl: 1280px
);
@mixin mq_max($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin mq_min($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: ($breakpoint-value - 1)) {
      @content;
    }

  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}
.fill, img.fill, svg.fill {
  width: 100%;
  height: 100%;
  object-fit: cover;
  &.p-absolute {
    position: absolute;
    top: 50% !important;
    left: 50% !important; 
    transform: translate(-50%, -50%);
  }
}
img.fit, svg.fit {
  object-fit: cover;
}
.p-relative {
    position: relative;
}
.p-fixed {
    position: fixed;
}
.p-sticky {
    position: sticky
}
.p-absolute {
    position: absolute;
    &.center {
      top: 50%;
      bottom: 50%;
    } 
}
.list-nostyle {
    list-style: none
}
.a-nostyle {
    text-decoration: none;
}
.f-left {
    float: left;
}
.f-right {
    float: right;
}
.fd-col {
  flex-direction: column;
}
.fd-col-r {
  flex-direction: column-reverse;
}
.fd-row {
  flex-direction: row;
}
.fd-row-r {
  flex-direction: row-reverse;
}
.ass {align-self: flex-start} /* Naming conventions sure are bothersome */
.asc {align-self: center}
.ase {align-self: flex-end}
.mfd-col {
  @include mq_max(sm) {
    flex-direction: column;
  }
}
.mfd-col-r {
  @include mq_max(sm) {
    flex-direction: column-reverse;
  }
}
.mfd-row {
  @include mq_max(sm) {
    flex-direction: row;
  }
}
.mfd-row-r {
  @include mq_max(sm) {
    flex-direction: row-reverse;
  }
}
.mfd-col {
  @include mq_max(sm) {
    flex-direction: column;
  }
}
.separator {
  width: 100%;
  margin-bottom: .5em;
  margin-top: .5em;
}
.separator::after {
  content: '';
  width: 80%;
  height: 1px;
  background-color: var(--primary-color-alpha);
  position: absolute;
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
}
.c-hand {
    cursor: pointer; /* fallback */
    cursor: hand;
}
.text-nosel {
  user-select: none;
}
.c-move {cursor: move}
.c-zoom-in {cursor: zoom-in}
.c-zoom-out {cursor: zoom-out}
.c-not-allowed {cursor: not-allowed}
.c-auto {cursor: auto}
.r05 {
    border-radius: 0.5em;
}
.card {
  border-radius: var(--border-radius);
  &:hover {box-shadow: 1px 2px 8px 0px rgba(33,33,33,0.4)}
  box-shadow: 1px 2px 4px 0px rgba(51,51,51,0.33);
}
.card > div:first-child, .card > div:first-child img.fill {
  border-radius: var(--border-radius);
}
.blur {
  filter: blur(7.5px);
}
.mask::before {
  content: '';
  top: 0;
  left: 0;
  position: absolute;
  height: 100%;
  width: 100%;
  background-color: var(--primary-color-alpha-dark);
  z-index: 100;
  opacity: 0.4;
  background-blend-mode: multiply;
}
.mask::after {
  content: '';
  position: absolute;
  height: 5px;
  background: white;
  width: 100%;
  bottom: -5px;
  z-index: 100;
}
.close{
  position: relative;
  display: inline-block;
  width: 50px;
  height: 50px;
  overflow: hidden;
  &:hover {
    &::before, &::after {
      background: blue;
    }
  }

  &::before, &::after {
    content: '';
    position: absolute;
    height: 2px;
    width: 100%;
    top: 50%;
    left: 0;
    margin-top: -1px;
    background: #000;
  }
  &::before {
   transform: rotate(45deg);
  }
  &::after {
    transform: rotate(-45deg);
  }
  &.big {
    transform: scale(3);
  }
  &.hairline {
    &::before, &::after {
      height: 1px;
    }
  }
  &.thick {
    &::before, &::after {
      height: 4px;
      margin-top: -2px;
    }
  }
  &.black {
    &::before, &::after {
      height: 8px;
      margin-top: -4px;
    }
  }
  &.heavy {
    &::before, &::after {
      height: 12px;
      margin-top: -6px;
    }
  }
  &.pointy {
    &::Before, &::after {
      width: 200%;
      left: -50%;
    }
  }
  &.rounded {
    &::before, &::after {
      border-radius: 5px;
    }
  }
  &.blades {
    &::before, &::after {
      border-radius: 5px 0;
    }
  }
  &.warp {
    &::before, &::after {
      border-radius: 120% 0;
    }
  }
  &.fat {
    &::before, &::after {
      border-radius: 100%;
    }
  }
}
.box {
  @include mq_max(xl) {
    &.xl-h-6 {
      min-height: calc(25vh * 6);
    }
    &.xl-h-5 {
      min-height: calc(25vh * 5);
    }
    &.xl-h-4 {
      min-height: calc(25vh * 4);
    }
    &.xl-h-3 {
      min-height: calc(25vh * 3);
    }
    &.xl-h-2 {
      min-height: calc(25vh * 2);
    }
    &.xl-h-1 {
      min-height: 25vh;
    }
  }
  @include mq_max(lg) {
    &.lg-h-6 {
      min-height: calc(25vh * 6);
    }
    &.lg-h-5 {
      min-height: calc(25vh * 5);
    }
    &.lg-h-4 {
      min-height: calc(25vh * 4);
    }
    &.lg-h-3 {
      min-height: calc(25vh * 3);
    }
    &.lg-h-2 {
      min-height: calc(25vh * 2);
    }
    &.lg-h-1 {
      min-height: 25vh;
    }
  }
  @include mq_max(sm) {
    &.sm-h-6 {
      min-height: calc(25vh * 6);
    }
    &.sm-h-5 {
      min-height: calc(25vh * 5);
    }
    &.sm-h-4 {
      min-height: calc(25vh * 4);
    }
    &.sm-h-3 {
      min-height: calc(25vh * 3);
    }
    &.sm-h-2 {
      min-height: calc(25vh * 2);
    }
    &.sm-h-1 {
      min-height: 25vh;
    }
  }
}
section {
  &.-sizeXL {
      width: 100%;
      .swiper-wrapper {
          padding-left: 0 !important;
      }
  }
  &.-sizeL {
      width: 75%;
  }
  &.-sizeM {
      width: 58.33333333%;
  }
}
.r-5-2 {
  @include responsive-ratio(5,2, true);
  @include content-in-ratio;
  position: relative;
}
.r-9-2 {
  @include responsive-ratio(9,2, true);
  @include content-in-ratio;
  position: relative;
}
.r-5-4 {
  @include responsive-ratio(5,4, true);
  @include content-in-ratio;
  position: relative;
}
.r-16-9 {
  @include responsive-ratio(16,9, true);
  @include content-in-ratio;
  position: relative;
}
.r-18-9 {
  @include responsive-ratio(18,9, true);
  @include content-in-ratio;
  position: relative;
}
.r-20-6 {
  @include responsive-ratio(20,6, true);
  @include content-in-ratio;
  position: relative;
}
.r-8-5 {
  @include responsive-ratio(8,5, true);
  @include content-in-ratio;
}
.r-4-35 {
  @include responsive-ratio(4,3, true);
  @include content-in-ratio;
  position: relative;
}
.r-4-5 {
  @include responsive-ratio(4,5, true);
  @include content-in-ratio;
  position: relative;
}
@include mq_max(xl) {
  .xlr-5-2 {
      @include responsive-ratio(5,2, true);
      @include content-in-ratio;
  }
  .xlr-9-2 {
    @include responsive-ratio(9,2, true);
    @include content-in-ratio;
    position: relative;
  }
  .xlr-5-4 {
      @include responsive-ratio(5,4, true);
      @include content-in-ratio;
  }
  .xlr-8-5 {
    @include responsive-ratio(8,5, true);
    @include content-in-ratio;
  }
  .xlr-16-9 {
      @include responsive-ratio(16,9, true);
      @include content-in-ratio;
  }
  .xlr-20-8 {
      @include responsive-ratio(20,8, true);
      @include content-in-ratio;
  }
  .xlr-20-6 {
      @include responsive-ratio(20,6, true);
      @include content-in-ratio;
  }
  .xlr-4-5 {
      @include responsive-ratio(4,5, true);
      @include content-in-ratio;
  }
}
@include mq_max(lg) {
  .lgr-5-2 {
      @include responsive-ratio(5,2, true);
      @include content-in-ratio;
  }
  .lgr-9-2 {
    @include responsive-ratio(9,2, true);
    @include content-in-ratio;
    position: relative;
  }
  .lgr-5-4 {
      @include responsive-ratio(5,4, true);
      @include content-in-ratio;
  }
  .lgr-8-5 {
    @include responsive-ratio(8,5, true);
    @include content-in-ratio;
  }
  .lgr-16-9 {
      @include responsive-ratio(16,9, true);
      @include content-in-ratio;
  }
  .lgr-20-8 {
      @include responsive-ratio(20,8, true);
      @include content-in-ratio;
  }
  .lgr-20-6 {
      @include responsive-ratio(20,6, true);
      @include content-in-ratio;
  }
  .lgr-4-5 {
      @include responsive-ratio(4,5, true);
      @include content-in-ratio;
  }
  .lgr-1-1 {
    @include responsive-ratio(1,1, true);
    @include content-in-ratio;
  }
}
@include mq_max(md) {
  .mdr-5-2 {
    @include responsive-ratio(5,2, true);
    @include content-in-ratio;
  }
  .mdr-9-2 {
    @include responsive-ratio(9,2, true);
    @include content-in-ratio;
    position: relative;
  }
  .mdr-5-4 {
      @include responsive-ratio(5,4, true);
      @include content-in-ratio;
  }
  .mdr-8-5 {
    @include responsive-ratio(8,5, true);
    @include content-in-ratio;
  }
  .mdr-16-9 {
      @include responsive-ratio(16,9, true);
      @include content-in-ratio;
  }
  .mdr-20-8 {
      @include responsive-ratio(20,8, true);
      @include content-in-ratio;
  }
  .mdr-20-6 {
      @include responsive-ratio(20,6, true);
      @include content-in-ratio;
  }
  .mdr-4-5 {
      @include responsive-ratio(4,5, true);
      @include content-in-ratio;
  }
}
@include mq_max(sm) {
  .smr-5-2 {
    @include responsive-ratio(5,2, true);
    @include content-in-ratio;
  }
  .smr-9-2 {
    @include responsive-ratio(9,2, true);
    @include content-in-ratio;
    position: relative;
  }
  .smr-5-4 {
      @include responsive-ratio(5,4, true);
      @include content-in-ratio;
  }
  .smr-8-5 {
    @include responsive-ratio(8,5, true);
    @include content-in-ratio;
  }
  .smr-16-9 {
      @include responsive-ratio(16,9, true);
      @include content-in-ratio;
  }
  .smr-20-8 {
      @include responsive-ratio(20,8, true);
      @include content-in-ratio;
  }
  .smr-20-6 {
      @include responsive-ratio(20,6, true);
      @include content-in-ratio;
  }
  .smr-4-5 {
      @include responsive-ratio(4,5, true);
      @include content-in-ratio;
  }
}
.overlay {
  background: transparent;
  margin-top: -24%;
}
.visually-hidden {
  display: none;
}